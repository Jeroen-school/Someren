@model List<Someren.Models.Room>
@{
    ViewData["Title"] = "Room Management";
}
<div class="card mb-4 fade-in">
    <div class="card-header">
        <h1 class="card-title">Room Management</h1>
        <div class="d-flex">
            <a href="/Room/Add" class="btn btn-primary shadow-button">
                <i class="fas fa-plus me-2"></i> Add Room
            </a>
        </div>
    </div>
    <div class="card-body p-0">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success mx-4 mt-3">
                <i class="fas fa-check-circle me-2"></i> @TempData["SuccessMessage"]
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger mx-4 mt-3">
                <i class="fas fa-exclamation-circle me-2"></i> @TempData["ErrorMessage"]
            </div>
        }

        <div class="dashboard-stats px-4 py-3">
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-door-open"></i>
                </div>
                <div class="stat-content">
                    <h3 class="stat-value">@Model.Count</h3>
                    <p class="stat-label">Total Rooms</p>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-user-tie"></i>
                </div>
                <div class="stat-content">
                    @{
                        var lecturerRoomCount = Model.Count(r => r.Type?.ToLower() == "lecturer");
                    }
                    <h3 class="stat-value">@lecturerRoomCount</h3>
                    <p class="stat-label">Lecturer Rooms</p>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-user-graduate"></i>
                </div>
                <div class="stat-content">
                    @{
                        var studentRoomCount = Model.Count(r => r.Type?.ToLower() == "student");
                    }
                    <h3 class="stat-value">@studentRoomCount</h3>
                    <p class="stat-label">Student Rooms</p>
                </div>
            </div>
        </div>
        <div class="card-body pb-0">
            <form method="get" action="/Room/Index" class="d-flex align-items-center gap-3 mb-3">
                <label for="Size" class="fw-semibold">Filter by Size:</label>
                <div class="w-auto">
                    <select id="Size" name="Size"
                            class="form-select form-select-lg shadow-sm px-3 py-2 fs-5"
                            style="min-width: 120px;"
                            onchange="this.form.submit()">
                        <option value="">All</option>
                        @foreach (var size in ViewBag.Sizes)
                        {
                            <option value="@size" selected="@(ViewBag.SelectedSize == size ? "selected" : null)">@size</option>
                        }
                    </select>
                </div>

                @if (ViewBag.SelectedSize != null)
                {
                    <a href="/Room/Index" class="btn btn-outline-secondary btn-lg">Clear Filter</a>
                }
            </form>


        </div>
        <div class="table-responsive">
            <table class="table table-hover mb-0">
                <thead>
                    <tr>
                        <th>Room Number</th>
                        <th>Type</th>
                        <th>Size</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var room in Model)
                    {
                        <tr>
                            <td>@room.RoomNumber</td>
                            <td>
                                @if (room.Type?.ToLower() == "lecturer")
                                {
                                    <span><i class="fas fa-user-tie me-2"></i>Lecturer Room</span>
                                }
                                else if (room.Type?.ToLower() == "student")
                                {
                                    <span><i class="fas fa-user-graduate me-2"></i>Student Room</span>
                                }
                                else
                                {
                                    @room.Type
                                }
                            </td>
                            <td>@room.Size</td>
                            <td class="action-buttons">
                                <a href="/Room/Edit/@room.RoomId" class="btn btn-primary shadow-button">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a href="/Room/Delete/@room.RoomId" class="btn btn-danger shadow-button">
                                    <i class="fas fa-trash"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
